#include <SPI.h>
#include <Ethernet.h>

#define FLEXsensor_limit_HI 250 // Constants define at start 
#define FLEXsensor_limit_LOW 180 
#define ONBOARD_LED 13 
#define FLEX_SENSOR 0
int turnvalue = 0;
byte turnstate= 0;
//initializing the different criteria to connect to server 
byte MAC[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xEF }; 
byte IPADDR[] = { 192, 168, 1, 230 };
byte GATEWAY[] = { 192, 168, 1, 1 };
byte SUBNET[] = { 255, 255, 255, 0 };
byte PHPSVR[] = {172,16,1,117};
// initialize a Client object 
EthernetClient client;






void setup() {
// serial debubbing for window
Serial.begin(9600);
// to get the output onboard led
pinMode(builtin_LED, OUTPUT);
Serial.println("begin");

Serial.println(Ethernet.begin(MAC));

delay(2000);

while(!client.available()){}
Serial.println(Ethernet.localIP());
Serial.println("Connecting to the web server to send alert...");
if(client.connect("proteinschool.com", 80)){
  Serial.println("Server Connected..");
}



void ContactWebServer(int turnvalue, int turnstate)
{ 
 if(!client.connected()){
client.connect("www.proteinschool.com", 80);
 }

if (client.connected())
{ Serial.println("Connected to PHP server");
// sending  an HTTP request:
client.println("GET /water.php?alert=1 HTTP/1.0");
client.println("Host: testwater.com");
client.println("User-Agent: Arduino");
//client.print(turnstate);
//client.print("&flex=");
//client.print(turnvalue);
//client.println(" HTTP/1.0");
client.println();
client.stop();
} else { 
  Serial.println("Failed to connect to the web server");
  }
}

else {
  Serial.println("Connection Failed !");
}
 
delay(1000);

}




void loop() 
{
  
}
